// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Tievol.Pages.Referencias
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Telerik.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Telerik.Blazor.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Tievol;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Tievol.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Tievol.Data.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Tievol.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\_Imports.razor"
using Tievol.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Referencias/Sucursales")]
    public partial class Sucursales : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 252 "C:\Users\MrBBlueSky\source\TievolPractica-dev_seba\Tievol\Pages\Referencias\Sucursales.razor"
        
    public List<Sucursal> LstSucursales { get; set; }
    public List<Estado> LstEstados { get; set; }
    public List<Empresa> LstEmpresas { get; set; }
    public List<Comuna> LstComunas { get; set; }
    public List<Ciudad> LstCiudades { get; set; }
    public List<Pais> LstPaises { get; set; }
    public List<Region> LstRegiones { get; set; }
    public string Accion { get; set; }
    public Sucursal SelectedSucursal { get; set; }
    public string TituloWindow { get; set; }
    public string TituloButton { get; set; }
    public string IconButton { get; set; }
    public TelerikNotification Notification { get; set; }
    public bool ShowWindow { get; set; } = false;


    private Telerik.Blazor.Components.TelerikNumericTextBox<int> IDInt;


    protected override async Task OnInitializedAsync()
    {
        LstSucursales = await srvSucursales.GetSucursales();
        LstEstados = await srvEstados.GetEstados();
        LstRegiones = await srvRegiones.GetRegiones();
        LstCiudades = await srvCiudades.GetCiudades();
        LstComunas = await srvComunas.GetComunas();
        LstEmpresas = await srvEmpresas.GetEmpresas();
        LstPaises = await srvPaises.GetPaises();
    }

    private void OnCancel(MouseEventArgs e)
    {
        ShowWindow = false;

        StateHasChanged();
    }

    private void OnClick(string cAccion, Sucursal sucursal)
    {
        ShowWindow = true;
        Accion = cAccion;
        SelectedSucursal = sucursal;

        if (cAccion == "Add")
        {
            SelectedSucursal = new Sucursal()
            {
                ID_Sucursal = 0,
                N_Sucursal = string.Empty,
                Direccion = string.Empty,
                Telefono1 = string.Empty,
                Telefono2 = string.Empty,
                Movil1 = string.Empty,
                Movil2 = string.Empty,
                Direccion_Correo = string.Empty,

                Estado = new Estado()
                {
                    ID_Estado = 0,
                    N_Estado = string.Empty
                },

                Region = new Region()
                {
                    ID_Region = 0,
                    N_Region = string.Empty
                },

                Comuna = new Comuna()
                {
                    ID_Comuna = 0,
                    N_Comuna = string.Empty
                },

                Ciudad = new Ciudad()
                {
                    ID_Ciudad = 0,
                    N_Ciudad = string.Empty
                },

                Pais = new Pais()
                {
                    ID_Pais = 0,
                    N_Pais = string.Empty
                },

                Empresa = new Empresa()
                {
                    ID_Empresa = 0,
                    N_Empresa = string.Empty,
                    Rut = string.Empty,
                    Direccion = string.Empty,
                    Razon_Social = string.Empty,
                    Giro = string.Empty,
                    Telefono1 = string.Empty,
                    Telefono2 = string.Empty,
                    Movil = string.Empty,
                    Direccion_Correo = string.Empty,
                    Web = string.Empty,
                    Observaciones = string.Empty,
                    Fecha_Antiguedad = DateTime.Now
                }

            };

            TituloWindow = "Agregar Sucursal";
            TituloButton = "Agregar";
            IconButton = "add";
        }
        else
        {
            SelectedSucursal = sucursal;


            if (Accion == "Upd")
            {
                TituloWindow = "Actualizar Sucursal";
                TituloButton = "Guardar";
                IconButton = "save";

            }
            else
            {
                TituloWindow = "Eliminar Sucursal";
                TituloButton = "Eliminar";
                IconButton = "delete";

            }
        }


        StateHasChanged();
    }

    private async Task OnSave()
    {
        ShowWindow = false;
        if (Accion == "Add")
        {
            if (LstSucursales.Exists(s => s.N_Sucursal == SelectedSucursal.N_Sucursal))
            {
                //toast.ShowWarning("La descripci贸n ya se encuentra en la lista...", "ATENCION");
                return;
            }

            var response = await srvSucursales.CreateAsync(SelectedSucursal);
            if (response.IsSuccess)
            {
                LstSucursales.Add(response.Result);
                Notification.Show(new NotificationModel()
                {
                    Text = "Se Agreg贸 la Sucursal correctamente...",
                    ThemeColor = "success",
                    ShowIcon = true
                });
                //toast.ShowSuccess("Los datos se almacenaron correctamente...", "ATENCION");
            }
            else
            {
                //toast.ShowError(response.Message, "ERROR");
            }
        }

        if (Accion == "Upd")
        {

            var response = await srvSucursales.UpdateAsync(SelectedSucursal);
            if (response.IsSuccess)
            {
                LstSucursales.Add(response.Result);
                var posicion = LstSucursales.FindIndex(s => s.ID_Sucursal == SelectedSucursal.ID_Sucursal);
                if (posicion == -1)
                {
                    //toast.ShowError("Se produjo un error inesperado...", "ERROR");
                }
                else
                {
                    LstSucursales[posicion] = SelectedSucursal;
                    Notification.Show(new NotificationModel()
                    {
                        Text = "Se Actualiz贸 correctamente la Sucursal",
                        ThemeColor = "info",
                        ShowIcon = true
                    });
                    //toast.ShowSuccess("Los datos se almacenaron correctamente...", "ATENCION");
                }
            }
            else
            {
                //toast.ShowError(response.Message, "ERROR");
            }
        }

        if (Accion == "Del")
        {
            var response = await srvSucursales.DeleteAsync(SelectedSucursal);
            if (response.IsSuccess)
            {
                LstSucursales = await srvSucursales.GetSucursales();
                Notification.Show(new NotificationModel()
                {
                    Text = "Se Elimin贸 correctamente la Sucursal",
                    ThemeColor = "error",
                    ShowIcon = true
                });
                //toast.ShowSuccess("Los datos se eliminaron correctamente...", "ATENCION");
            }
            else
            {
                //toast.ShowError(response.Message, "ERROR");
            }
        }


        LstSucursales = await srvSucursales.GetSucursales();


        StateHasChanged();
    } 

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private RegionesServices srvRegiones { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CiudadesServices srvCiudades { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private EmpresasServices srvEmpresas { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PaisesServices srvPaises { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ComunasServices srvComunas { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private EstadosServices srvEstados { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SucursalesServices srvSucursales { get; set; }
    }
}
#pragma warning restore 1591
